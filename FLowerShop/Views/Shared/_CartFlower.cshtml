@using System.Web.Mvc.Html

@{
    int totalPrice = 0;
}

<ul class="dropdown-menu dropdown-menu-end table-cart-flower">
    <table class="table mb-0" style="min-width: 500px;">
        @if (ViewBag.lstFlowerCarts != null && ViewBag.lstFlowerCarts.Count > 0)
        {
            <tbody>
                @foreach (var item in ViewBag.lstFlowerCarts)
                {
                    <tr>
                        <td class="text-center">
                            <a href="@Url.Action("Detail", "Flowers", new {flowerId = item.FLOWER_ID})">
                                <img class="img-thumbnail img-cart-flower"
                                     src="~/Content/assets/img/@item.FLOWER.FLOWER_IMAGE" alt="@item.FLOWER.FLOWER_IMAGE">
                            </a>
                        </td>
                        <td class="align-middle text-center">
                            <a href="@Url.Action("Detail", "Flowers", new {flowerId = item.FLOWER_ID})">
                                @item.FLOWER.FLOWER_NAME
                            </a>
                        </td>
                        <td class="text-center align-middle">
                            @item.QUANTITY
                        </td>
                        <td class="text-center align-middle subtotal-value">
                            @item.SUBTOTAL.ToString("N0")VNĐ
                        </td>
                        @using (Html.BeginForm("DeleteProduct", "ShoppingCart", FormMethod.Post))
                        {
                            <td class="text-start align-middle">
                                <button class="btn bg-pink shadow-none btn-delete-product liveToastBtn"
                                        data-shoppingCartId="@item.CART_ID">
                                    <i class="fa-solid fa-x text-white"></i>
                                </button>
                            </td>
                        }
                    </tr>
                    totalPrice += (int)@item.SUBTOTAL;
                }
                <tr>
                    <td class="fw-bold text-end" colspan="3">
                        Tổng cộng
                    </td>
                    <td class="text-center" id="total-price">
                        @totalPrice.ToString("N0")VNĐ
                    </td>
                    <td></td>
                </tr>
                <tr>
                    <td class="text-end" colspan="5">
                        <a href="@Url.Action("Index", "ShoppingCart")" title="Giỏ hàng" class="text-pink me-3">
                            <i class="fa-solid fa-bag-shopping"></i>
                            <span class="d-none d-md-inline">Giỏ hàng</span>
                        </a>
                        <a href="@Url.Action("Index", "Checkout")" title="Thanh toán" class="text-pink me-4">
                            <i class="fa-solid fa-share"></i>
                            <span class="d-none d-md-inline">Thanh toán</span>
                    </td>
                </tr>
            </tbody>
        }
        else
        {
            <h6 class="text-center py-4">Giỏ hàng của bạn đang trống</h6>
        }
    </table>
</ul>

<script>
    document.addEventListener('DOMContentLoaded', function () {
        const deleteButtons = document.querySelectorAll('.btn-delete-product');

        function updateTotalPrice() {
            const totalElements = document.querySelectorAll('.subtotal-value');
            let newTotalPrice = 0;

            totalElements.forEach(function (element) {
                const valueWithoutVND = element.textContent.replace('VNĐ', '');
                const valueWithoutCommas = valueWithoutVND.replace(/,/g, '');
                newTotalPrice += parseFloat(valueWithoutCommas);
            });

            const totalPriceElement = document.getElementById('total-price');
            totalPriceElement.textContent = newTotalPrice.toLocaleString() + 'VNĐ';
        }

        function updateCartCount(newCartCount) {
            const cartCountElement = document.querySelectorAll('.cart-count');
            cartCountElement.forEach(function (element) {
                element.textContent = newCartCount;
            });
        }

        deleteButtons.forEach(function (button) {
            button.addEventListener('click', function (e) {
                e.preventDefault();
                const shoppingCartId = this.getAttribute('data-shoppingCartId');

                fetch('/ShoppingCart/DeleteProduct', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({ shoppingCartId: shoppingCartId }),
                })
                .then(response => response.json())
                .then(result => {
                    if (result.success) {
                        const row = this.closest('tr');
                        row.remove();
                        updateTotalPrice();
                        updateCartCount(result.cartCount);
                        if (document.querySelectorAll('.btn-delete-product').length === 0) {
                            window.location.href = '@Url.Action("Index", "ShoppingCart")';
                        }
                    } else {
                        alert('Error: ' + result.message);
                    }
                })
                .catch(error => {
                    console.error('Error:', error);
                });
            });
        });
    });
</script>
