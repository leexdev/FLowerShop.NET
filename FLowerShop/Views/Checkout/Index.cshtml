@model FLowerShop.Models.OrderModel

@{
    ViewBag.Title = "Thanh toán";
}

<div class="container mt-3 mt-md-5">
    @using (Html.BeginForm("Index", "Checkout", FormMethod.Post, new { id = "form-checkout" }))
    {
        <div class="row">
            <div class="col-12 col-md-7">
                <h5 class="m-0">Thông tin người gửi</h5>
                <hr class="mt-2 mb-3" />
                <div class="row mb-3">
                    <div class="col-md-6">
                        <div class="form-group">
                            @Html.LabelFor(model => model.Order.SENDER_NAME, new { @class = "fw-bold fs-6 form-label" })
                            @Html.TextBoxFor(model => model.Order.SENDER_NAME, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.Order.SENDER_NAME, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="col-md-6 mt-3 mt-md-0">
                        <div class="form-group">
                            @Html.LabelFor(model => model.Order.SENDER_PHONE, new { @class = "fw-bold fs-6 form-label" })
                            @Html.TextBoxFor(model => model.Order.SENDER_PHONE, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.Order.SENDER_PHONE, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.Order.SENDER_EMAIL, new { @class = "fw-bold fs-6 form-label" })
                    @Html.TextBoxFor(model => model.Order.SENDER_EMAIL, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Order.SENDER_EMAIL, "", new { @class = "text-danger" })
                </div>
                <h5 class="m-0 mt-4">Thông tin người nhận</h5>
                <hr class="mt-2 mb-3" />
                <div class="row mb-3">
                    <div class="col-md-6">
                        <div class="form-group">
                            @Html.LabelFor(model => model.Order.RECIPIENT_NAME, new { @class = "fw-bold fs-6 form-label" })
                            @Html.TextBoxFor(model => model.Order.RECIPIENT_NAME, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.Order.RECIPIENT_NAME, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="col-md-6 mt-3 mt-md-0">
                        <div class="form-group">
                            @Html.LabelFor(model => model.Order.RECIPIENT_PHONE, new { @class = "fw-bold fs-6 form-label" })
                            @Html.TextBoxFor(model => model.Order.RECIPIENT_PHONE, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.Order.RECIPIENT_PHONE, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-6">
                        <div class="form-group">
                            @Html.Label("Tỉnh, thành phố", new { @class = "fw-bold fs-6 form-label" })
                            <select class="form-select">
                                <option disabled>--- Vui lòng chọn ---</option>
                                <option selected value="1">Tp. Hồ Chí Minh</option>
                                <option value="2">Hà Nội</option>
                                <option value="3">Nha Trang</option>
                            </select>
                        </div>
                    </div>
                    <div class="col-md-6 mt-3 mt-md-0">
                        <div class="form-group">
                            @Html.Label("Quận/ Huyện:", new { @class = "fw-bold fs-6 form-label" })
                            <select class="form-select">
                                <option disabled>--- Vui lòng chọn ---</option>
                                <option selected value="1">Quận 9</option>
                                <option value="2">Quận 1</option>
                                <option value="3">Quận 2</option>
                            </select>
                        </div>
                    </div>
                </div>
                <div class="form-group my-3">
                    @Html.LabelFor(model => model.Order.RECIPIENT_ADDRESS, new { @class = "fw-bold fs-6 form-label" })
                    @Html.TextBoxFor(model => model.Order.RECIPIENT_ADDRESS, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Order.RECIPIENT_ADDRESS, "", new { @class = "text-danger" })
                </div>
                <div class="mb-3">
                    @Html.LabelFor(model => model.Order.MESSAGE_TO_RECIPIENT, new { @class = "fw-bold fs-6" })
                    @Html.TextAreaFor(model => model.Order.MESSAGE_TO_RECIPIENT, new { @class = "form-control", rows = "2" })
                </div>
                <div class="mb-3">
                    @Html.LabelFor(model => model.Order.MESSAGE_TO_SHOP, new { @class = "fw-bold fs-6" })
                    @Html.TextAreaFor(model => model.Order.MESSAGE_TO_SHOP, new { @class = "form-control", rows = "2" })
                </div>
                @Html.LabelFor(model => model.Order.HIDE_SENDER_INFO, new { @class = "fw-bold fs-6" })
                <div class="form-check mb-5">
                    <input type="checkbox" class="form-check-input" id="check-hide-sender" name="Order.HIDE_SENDER_INFO" value="true">
                    <input type="hidden" name="Order.HIDE_SENDER_INFO" value="false">
                    @Html.Label("Giấu thông tin người gửi", new { @class = "form-check-label", @for = "check-hide-sender" })
                </div>
            </div>
            <div class="col-12 col-md-5">
                <div id="list-flower-checkout">
                    @Html.Partial("_CheckoutFlower")
                </div>
                <form id="form-coupon">
                    <div class="row">
                        <div class="col-12 col-md-3">
                            <label for="input-coupon" class="col-form-label fw-bold">Mã giảm giá</label>
                        </div>
                        <div class="col-12 col-md-6">
                            <input type="text" id="couponName" name="couponName" placeholder="Mã giảm giá" class="form-control" />
                        </div>
                        <div class="col-12 col-md-3 mt-3 mt-md-0 text-end">
                            <button type="button" id="btn-add-coupon" class="btn bg-pink text-white btn-select-coupon">
                                Áp dụng
                            </button>
                        </div>
                        <label class="mt-2" id="coupon-alert"></label>
                    </div>
                </form>
                <div class="form-check mt-4">
                    <div class="d-flex">
                        <input class="form-check-input my-auto" type="radio" value="true" name="Order.PAYMENT_METHOD" id="pay-wallet" />
                        <label class="form-check-label" for="pay-wallet">
                            <img class="img-fluid ms-1" src="~/Content/assets/img/cheque.png" alt="momo"
                                 style="max-width: 48px; max-height: 48px" />
                            Ví điện tử
                            <img class="img-fluid" src="~/Content/assets/img/momo.png" alt="momo"
                                 style="max-width: 48px; max-height: 48px" />
                        </label>
                    </div>
                    <div class="d-flex">
                        <input class="form-check-input my-auto" type="radio" value="false" name="Order.PAYMENT_METHOD" id="pay-cod" checked />
                        <label class="form-check-label" for="pay-cod">
                            <img class="img-fluid ms-1" src="~/Content/assets/img/cod.png" alt="momo"
                                 style="max-width: 48px; max-height: 48px" />
                            Thanh toán khi giao hàng
                        </label>
                    </div>
                </div>
                <hr>
                <div class="col-auto float-end mb-3">
                    <button type="submit" id="btn-checkout-form" class="btn mb-3 bg-pink text-white">
                        Xác nhận đơn hàng
                    </button>
                </div>
            </div>
        </div>
    }
</div>

<script>
    let formSubmitted = false;

    document.getElementById('btn-checkout-form').addEventListener('click', function () {
        formSubmitted = true;
    });

    window.addEventListener('beforeunload', function (event) {
        event.preventDefault();
        if (!formSubmitted) {
            if ('@Session["BuyFlower"]' !== null) {
                fetch('/Checkout/ExitCheckout', {
                    method: 'POST',
                    credentials: 'same-origin'
                });
            }
        }
    });

    document.addEventListener('DOMContentLoaded', () => {
        let couponBtn = document.getElementById('btn-add-coupon');
        couponBtn.addEventListener('click', () => {
            let couponName = document.getElementById('couponName').value;
            fetch('/Checkout/CheckCoupon', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({ couponName}),
            })
                .then(response => response.json())
                .then(result => {
                    if (result.TotalPriceGrand != null) {
                        document.getElementById('total-price-checkout').innerText = formatPrice(result.TotalPriceGrand);
                    }
                    let couponAlert = document.getElementById('coupon-alert');

                    let table = document.getElementById('table-flower-checkout');
                    let rowToRemove = document.getElementById('coupon-row');

                    if (rowToRemove && rowToRemove.parentNode) {
                        rowToRemove.parentNode.removeChild(rowToRemove);
                    }

                    if (result.CouponSuccess) {
                        couponAlert.innerText = result.CouponSuccess;
                        couponAlert.className = '';
                        couponAlert.classList.add("mt-2", "text-success")

                        var discountRow = table.insertRow(table.rows.length - 1);
                        discountRow.id = 'coupon-row';
                        discountRow.className = 'text-end';

                        discountRow.insertCell(0).colSpan = 2;
                        discountRow.cells[0].className = 'fw-bold';
                        discountRow.cells[0].innerText = 'Mã giảm giá';

                        discountRow.insertCell(1).colSpan = 2;
                        discountRow.cells[1].innerText = '-' + formatPrice(result.CouponValue);

                    }
                    else {
                        couponAlert.innerText = result.CouponError;
                        couponAlert.className = '';
                        couponAlert.classList.add("mt-2", "text-danger");
                    }
                })
        });
    });

    function formatPrice(price) {
        return price.toLocaleString() + "VNĐ";
    }
</script>
