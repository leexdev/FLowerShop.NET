//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace FlowerShop.Context
{
    using System;
    using System.Collections.Generic;
    using System.ComponentModel;
    using System.ComponentModel.DataAnnotations;

    public partial class ORDER
    {
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2214:DoNotCallOverridableMethodsInConstructors")]
        public ORDER()
        {
            this.ORDERDETAILS = new HashSet<ORDERDETAIL>();
            this.ORDERHISTORies = new HashSet<ORDERHISTORY>();
        }

        [DisplayName("Mã đơn hàng")]
        public System.Guid ORDER_ID { get; set; }
        public Nullable<System.Guid> USER_ID { get; set; }

        [DisplayName("Ngày đặt")]
        public Nullable<System.DateTime> ORDER_DATE { get; set; }

        [DisplayName("Tổng tiền")]
        public Nullable<decimal> TOTAL_AMOUNT { get; set; }
        public Nullable<System.Guid> DISCOUNT_ID { get; set; }

        [DisplayName("Lời nhắn cho người gửi")]
        [MaxLength(300, ErrorMessage = "Giới hạn {1} ký tự")]
        public string MESSAGE_TO_RECIPIENT { get; set; }

        [DisplayName("Lời nhắn cho shop")]
        [MaxLength(300, ErrorMessage = "Giới hạn {1} ký tự")]
        public string MESSAGE_TO_SHOP { get; set; }

        [DisplayName("Ẩn thông tin người gửi")]
        public Nullable<bool> HIDE_SENDER_INFO { get; set; }

        [DisplayName("Hình thức thanh toán")]
        public Nullable<bool> PAYMENT_METHOD { get; set; }

        [DisplayName("Họ tên")]
        [Required(ErrorMessage = "Tên người gửi không được để trống")]
        [MinLength(3, ErrorMessage = "Tên người gửi phải có ít nhất {1} ký tự")]
        [MaxLength(100, ErrorMessage = "Giới hạn {1} ký tự")]
        public string SENDER_NAME { get; set; }

        [DisplayName("Điện thoại")]
        [Required(ErrorMessage = "Số điện thoại không được để trống")]
        [RegularExpression(@"^\d{10,15}$", ErrorMessage = "Số điện thoại phải là số từ 10 đến 15 ký tự")]
        public string SENDER_PHONE { get; set; }

        [DisplayName("Địa chỉ Email")]
        [Required(ErrorMessage = "Email không được để trống")]
        [EmailAddress(ErrorMessage = "Email không hợp lệ")]
        public string SENDER_EMAIL { get; set; }

        [DisplayName("Họ tên")]
        [Required(ErrorMessage = "Tên người nhận không được để trống")]
        [MinLength(3, ErrorMessage = "Tên người nhận phải có ít nhất {1} ký tự")]
        [MaxLength(100, ErrorMessage = "Giới hạn {1} ký tự")]
        public string RECIPIENT_NAME { get; set; }

        [DisplayName("Điện thoại")]
        [Required(ErrorMessage = "Số điện thoại không được để trống")]
        [RegularExpression(@"^\d{10,15}$", ErrorMessage = "Số điện thoại phải là số từ 10 đến 15 ký tự")]
        public string RECIPIENT_PHONE { get; set; }

        [DisplayName("Địa chỉ")]
        [Required(ErrorMessage = "Địa chỉ không được để trống")]
        [MinLength(5, ErrorMessage = "Địa chỉ phải có ít nhất {1} ký tự")]
        [MaxLength(200, ErrorMessage = "Giới hạn {1} ký tự")]
        public string RECIPIENT_ADDRESS { get; set; }

        [DisplayName("Tỉnh/Thành phố")]
        public string RECIPIENT_PROVINCE { get; set; }

        [DisplayName("Huyện")]
        public string RECIPIENT_DISTRICT { get; set; }
        public bool DELETED { get; set; }

        public virtual DISCOUNTCODE DISCOUNTCODE { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<ORDERDETAIL> ORDERDETAILS { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<ORDERHISTORY> ORDERHISTORies { get; set; }
        public virtual USER USER { get; set; }
    }
}
